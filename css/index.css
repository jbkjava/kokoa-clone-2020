@import url("https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap");
@import "reset.css";
@import "variable.css";
/*components*/
@import "components/status-bar.css";

/*screen*/
@import "screen/login.css";

/*
    해당 파일은 모든 페이지에서 공통적으로 적용되어야 할 css를 적어 놓는곳
*/

body {
  font-family: "Open Sans", sans-serif;
}

/* input focus change 방법 
#login-form input:focus을
    1) 한 곳에서만 쓰일 때에는 해당 css파일에서 작성 
    2) 여러 곳에서 기본적으로 적용되어야 할 속성이면 이전에 import했던
    reset.css파일 중 마지막 부분의 코드 값으로 지정.
*/

/*
    justify-content:space-between을 사용해도 좋지만 각기 다른 width
    를 지니고 있기 때문에 가운데 요소가 정 가운데에 배치되지 않는 현상이 자주 일어난다.

    이럴 때 사용할 수 있는 방법이 하나 있다.
    보통 이런 것 들을 css hack으로 부르며 커뮤니티에서도 공유한다.

    * justify-between에서의 각 요소 width에 따른 가운데 배치문제
    1) 컨테이너에서의 justify-content:center로 모으기
    2) 각 child의 크기를 33%로 부여
    3) 2번째 (가운데로 배치) 요소를 flex컨테이너로 지정 + justify-content: center
    4) 마지막 요소를 flex컨테이너 지정 + justify-content: flex-end부여
    5) 요소의 item들의 높이가 다를 때 align-item center부여

    위 처럼 사고력을 발휘하여 문제를 해결하는 능력도 프로그래밍에선 중요하다.
*/

/*
    font-awesome class 자체에서 크기 조정하기
     fa-nX로 부여 (n :정수)
*/

/*
reset css file (=css초기화 파일)
    간혹 브라우저에서 기본적으로 제공하는 css로 인하여 원하는 형태의 레이아웃이나
    요소의 배치가 되지 않을 때가 많다.
    그래서 css초기화 파일로 모든 요소를 default로 상태로 전환한 다음
    사용자 css 정의로써 다시 재 정의를 해주는 것이 마음 편하다.
*/

/*
    page ruler redux extension app with googleChrome browser
    이 확장 앱을 사용해서 현재 사이트에서 적용된 요소들의 간격들을
    줄자 처럼 사용하는 방식으로 쉽게 찾아낼 수 있다.

    colorZilla extension app with googleChrome
    이 확장앱은 해당 페이지에서 사용된 색상의 컬러값을 가져올 수 있다.
*/

/* css 한 파일에 모든 속성의 css를 부여해주는 것 보다는
    각 파츠별로 나누어서 그에 맞는 css를 적고 파일로 저장해서 import한다.
    마치 나폴레옹의 분할정복법 같이?
*/
